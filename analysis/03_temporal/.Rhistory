# Warning:
# This script needs the data in the format of yyyy-mm-dd. E.g., '2014-02-26'.
# Check if this is the case for the considered cities.
library(lubridate)
library(ggplot2)
library(sqldf)
dirs = list.files("data/")
cities = NULL
for( city in dirs)
{
# city = 'London'
writeLines( paste("Analysing", city) )
# loading data
#
reviews = read.csv( paste0("data/", city, "/reviews.csv") )
# structure of the data
#
writeLines("... structure of the data")
print( names(reviews) )
writeLines("... structure of time")
print( head(reviews$date) )
# ordering data
#
reviews = sqldf("select * from reviews order by date")
# transforming data types
#
reviews$dateString = reviews$date
reviews$date = ymd(reviews$date)
reviews$listing_id = factor(reviews$listing_id)
# adding new columns
#
reviews$seq = row.names(reviews)
reviews$cumsum = cumsum(reviews$seq)
reviews$ratio_of_reviews = reviews$cumsum/max(reviews$cumsum)
# plotting
#
pdf( paste0("plots/", city, ".pdf") , width=5, height=5)
myplot = ggplot(reviews, aes(x=date, y=ratio_of_reviews)) +
geom_line() +
scale_y_log10() +
geom_hline(yintercept=0.1, linetype="dotted") +
geom_hline(yintercept=0.01, linetype="dotted") +
geom_hline(yintercept=0.001, linetype="dotted") +
ggtitle(city)
print(myplot)
dev.off()
time01 = as.character( sqldf("select max(dateString) dataA from reviews where ratio_of_reviews<0.1") )
time001 = as.character( sqldf("select max(dateString) dataA from reviews where ratio_of_reviews<0.01") )
time0001 = as.character( sqldf("select max(dateString) dataA from reviews where ratio_of_reviews<0.001") )
cities = rbind(cities, data.frame(city=city, time01=time01, time001=time001, time0001=time0001, n_reviews=nrow(reviews)))
}
# Warning:
# This script needs the data in the format of yyyy-mm-dd. E.g., '2014-02-26'.
# Check if this is the case for the considered cities.
library(lubridate)
library(ggplot2)
library(sqldf)
dirs = list.files("data/")
cities = NULL
for( city in dirs)
{
# city = 'London'
writeLines( paste("/n/nAnalysing", city) )
# loading data
#
reviews = read.csv( paste0("data/", city, "/reviews.csv") )
# structure of the data
#
writeLines("... structure of the data")
print( names(reviews) )
writeLines("... structure of time")
print( head(reviews$date) )
# ordering data
#
reviews = sqldf("select * from reviews order by date")
# transforming data types
#
reviews$dateString = reviews$date
reviews$date = ymd(reviews$date)
reviews$listing_id = factor(reviews$listing_id)
# adding new columns
#
reviews$seq = row.names(reviews)
reviews$cumsum = cumsum(reviews$seq)
reviews$ratio_of_reviews = reviews$cumsum/max(reviews$cumsum)
# plotting
#
pdf( paste0("plots/", city, ".pdf") , width=5, height=5)
myplot = ggplot(reviews, aes(x=date, y=ratio_of_reviews)) +
geom_line() +
scale_y_log10() +
geom_hline(yintercept=0.1, linetype="dotted") +
geom_hline(yintercept=0.01, linetype="dotted") +
geom_hline(yintercept=0.001, linetype="dotted") +
ggtitle(city)
print(myplot)
dev.off()
time01 = as.character( sqldf("select max(dateString) dataA from reviews where ratio_of_reviews<0.1") )
time001 = as.character( sqldf("select max(dateString) dataA from reviews where ratio_of_reviews<0.01") )
time0001 = as.character( sqldf("select max(dateString) dataA from reviews where ratio_of_reviews<0.001") )
cities = rbind(cities, data.frame(city=city, time01=time01, time001=time001, time0001=time0001, n_reviews=nrow(reviews)))
}
# Warning:
# This script needs the data in the format of yyyy-mm-dd. E.g., '2014-02-26'.
# Check if this is the case for the considered cities.
library(lubridate)
library(ggplot2)
library(sqldf)
dirs = list.files("data/")
cities = NULL
for( city in dirs)
{
# city = 'London'
writeLines( paste("\n\nAnalysing", city) )
# loading data
#
reviews = read.csv( paste0("data/", city, "/reviews.csv") )
# structure of the data
#
writeLines("... structure of the data")
print( names(reviews) )
writeLines("... structure of time")
print( head(reviews$date) )
# ordering data
#
reviews = sqldf("select * from reviews order by date")
# transforming data types
#
reviews$dateString = reviews$date
reviews$date = ymd(reviews$date)
reviews$listing_id = factor(reviews$listing_id)
# adding new columns
#
reviews$seq = row.names(reviews)
reviews$cumsum = cumsum(reviews$seq)
reviews$ratio_of_reviews = reviews$cumsum/max(reviews$cumsum)
# plotting
#
pdf( paste0("plots/", city, ".pdf") , width=5, height=5)
myplot = ggplot(reviews, aes(x=date, y=ratio_of_reviews)) +
geom_line() +
scale_y_log10() +
geom_hline(yintercept=0.1, linetype="dotted") +
geom_hline(yintercept=0.01, linetype="dotted") +
geom_hline(yintercept=0.001, linetype="dotted") +
ggtitle(city)
print(myplot)
dev.off()
time01 = as.character( sqldf("select max(dateString) dataA from reviews where ratio_of_reviews<0.1") )
time001 = as.character( sqldf("select max(dateString) dataA from reviews where ratio_of_reviews<0.01") )
time0001 = as.character( sqldf("select max(dateString) dataA from reviews where ratio_of_reviews<0.001") )
cities = rbind(cities, data.frame(city=city, time01=time01, time001=time001, time0001=time0001, n_reviews=nrow(reviews)))
}
# Warning:
# This script needs the data in the format of yyyy-mm-dd. E.g., '2014-02-26'.
# Check if this is the case for the considered cities.
library(lubridate)
library(ggplot2)
library(sqldf)
dirs = list.files("data/")
cities = NULL
for( city in dirs)
{
# city = 'London'
writeLines( paste("\n\nAnalysing", city) )
# loading data
#
reviews = read.csv( paste0("data/", city, "/reviews.csv") )
# structure of the data
#
writeLines("... structure of the data")
print( names(reviews) )
writeLines("... structure of time")
print( head(reviews$date) )
# ordering data
#
reviews = sqldf("select * from reviews order by date")
# transforming data types
#
reviews$dateString = reviews$date
reviews$date = ymd(reviews$date)
reviews$listing_id = factor(reviews$listing_id)
# adding new columns
#
reviews$seq = row.names(reviews)
reviews$cumsum = cumsum(reviews$seq)
reviews$ratio_of_reviews = reviews$cumsum/max(reviews$cumsum)
# plotting
#
pdf( paste0("plots/", city, ".pdf") , width=5, height=5)
myplot = ggplot(reviews, aes(x=date, y=ratio_of_reviews)) +
geom_line() +
scale_y_log10() +
geom_hline(yintercept=0.1, linetype="dotted") +
geom_hline(yintercept=0.01, linetype="dotted") +
geom_hline(yintercept=0.001, linetype="dotted") +
ggtitle(city)
print(myplot)
dev.off()
timeMin = as.character( sqldf("select min(dateString) from reviews") )
time01 = as.character( sqldf("select max(dateString) from reviews where ratio_of_reviews<0.1") )
time001 = as.character( sqldf("select max(dateString) from reviews where ratio_of_reviews<0.01") )
time0001 = as.character( sqldf("select max(dateString) from reviews where ratio_of_reviews<0.001") )
timeMax = as.character( sqldf("select max(dateString) from reviews") )
cities = rbind(cities, data.frame(city=city,
timeMin=timeMin,
time01=time01,
time001=time001,
time0001=time0001,
timeMax=timeMax,
n_reviews=nrow(reviews)))
}
View(cities)
View(reviews)
names(reviews)
listings = sqldf("select listing_id, min(date) date from reviews group by listing_id")
listings = sqldf("select listing_id, min(date), count(*) n_reviews date from reviews group by listing_id")
View(listings)
listings = sqldf("select listing_id, min(date) date, count(*) n_reviews from reviews group by listing_id")
View(listings)
library(lubridate)
library(ggplot2)
library(sqldf)
dirs = list.files("data/")
pre_processing = function(df)
{
df$dateString = df$date
df$date = ymd(df$date)
df$listing_id = factor(df$listing_id)
df$seq = row.names(df)
df$cumsum = cumsum(df$seq)
df$ratio = df$cumsum/max(df$cumsum)
return(df)
}
plotting = function(df, city, sub_title)
{
pdf( paste0("plots/", city, ".pdf") , width=5, height=5)
myplot = ggplot(df, aes(x=date, y=ratio)) +
geom_line() +
scale_y_log10() +
geom_hline(yintercept=0.1, linetype="dotted") +
geom_hline(yintercept=0.01, linetype="dotted") +
geom_hline(yintercept=0.001, linetype="dotted") +
ggtitle( paste(city, "-", sub_title) )
print(myplot)
dev.off()
}
computing_time = function(df)
{
timeMin = as.character( sqldf("select min(dateString) from df") )
time01 = as.character( sqldf("select max(dateString) from df where ratio_of_reviews<0.1") )
time001 = as.character( sqldf("select max(dateString) from df where ratio_of_reviews<0.01") )
time0001 = as.character( sqldf("select max(dateString) from df where ratio_of_reviews<0.001") )
timeMax = as.character( sqldf("select max(dateString) from df") )
return(list(timeMin, time01, time001, time0001, timeMax))
}
city = 'London'
writeLines( paste("\n\nAnalysing", city) )
reviews = read.csv( paste0("data/", city, "/reviews.csv") )
writeLines("... structure of the data")
print( names(reviews) )
writeLines("... structure of time")
print( head(reviews$date) )
# grouping data
#
listings = sqldf("select listing_id, min(date) date, count(*) n_reviews from reviews group by listing_id")
reviews = sqldf("select * from reviews order by date")
listings = sqldf("select * from listings order by date")
reviews = pre_processing(reviews)
listings = pre_processing(listings)
plotting(reviews, city, "reviews")
plotting = function(df, city, sub_title)
{
pdf( paste0("plots/", city, "sub_title.pdf") , width=5, height=5)
myplot = ggplot(df, aes(x=date, y=ratio)) +
geom_line() +
scale_y_log10() +
geom_hline(yintercept=0.1, linetype="dotted") +
geom_hline(yintercept=0.01, linetype="dotted") +
geom_hline(yintercept=0.001, linetype="dotted") +
ggtitle( paste(city, "-", sub_title) )
print(myplot)
dev.off()
}
plotting(reviews, city, "reviews")
plotting(listings, city, "listings")
plotting(listings, city, "listings")
plotting = function(df, city, sub_title)
{
pdf( paste0("plots/", city, "_", sub_title, ".pdf") , width=5, height=5)
myplot = ggplot(df, aes(x=date, y=ratio)) +
geom_line() +
scale_y_log10() +
geom_hline(yintercept=0.1, linetype="dotted") +
geom_hline(yintercept=0.01, linetype="dotted") +
geom_hline(yintercept=0.001, linetype="dotted") +
ggtitle( paste(city, "-", sub_title) )
print(myplot)
dev.off()
}
plotting(reviews, city, "reviews")
plotting(listings, city, "listings")
time_reviews = computing_time(reviews)
computing_time = function(df)
{
timeMin = as.character( sqldf("select min(dateString) from df") )
time01 = as.character( sqldf("select max(dateString) from df where ratio<0.1") )
time001 = as.character( sqldf("select max(dateString) from df where ratio<0.01") )
time0001 = as.character( sqldf("select max(dateString) from df where ratio<0.001") )
timeMax = as.character( sqldf("select max(dateString) from df") )
return(list(timeMin, time01, time001, time0001, timeMax))
}
time_reviews = computing_time(reviews)
time_listings = computing_time(listings)
time_reviews
return(list(timeMin=timeMin,
time01=time01,
time001=time001,
time0001=time0001,
timeMax=timeMax))
computing_time = function(df)
{
timeMin = as.character( sqldf("select min(dateString) from df") )
time01 = as.character( sqldf("select max(dateString) from df where ratio<0.1") )
time001 = as.character( sqldf("select max(dateString) from df where ratio<0.01") )
time0001 = as.character( sqldf("select max(dateString) from df where ratio<0.001") )
timeMax = as.character( sqldf("select max(dateString) from df") )
return(list(timeMin=timeMin,
time01=time01,
time001=time001,
time0001=time0001,
timeMax=timeMax))
}
time_reviews = computing_time(reviews)
time_listings = computing_time(listings)
source('~/Dropbox/work/papers/papers2017/TBD (airbnb)/analysis/03_temporal/temporal.R', echo=TRUE)
source('~/Dropbox/work/papers/papers2017/TBD (airbnb)/analysis/03_temporal/temporal.R', echo=TRUE)
library(lubridate)
library(ggplot2)
library(sqldf)
dirs = list.files("data/")
pre_processing = function(df)
{
df$dateString = df$date
df$date = ymd(df$date)
df$listing_id = factor(df$listing_id)
df$seq = row.names(df)
df$cumsum = cumsum(df$seq)
df$ratio = df$cumsum/max(df$cumsum)
return(df)
}
plotting = function(df, city, sub_title)
{
pdf( paste0("plots/", city, "_", sub_title, ".pdf") , width=5, height=5)
myplot = ggplot(df, aes(x=date, y=ratio)) +
geom_line() +
scale_y_log10() +
geom_hline(yintercept=0.1, linetype="dotted") +
geom_hline(yintercept=0.01, linetype="dotted") +
geom_hline(yintercept=0.001, linetype="dotted") +
ggtitle( paste(city, "-", sub_title) )
print(myplot)
dev.off()
}
computing_time = function(df)
{
timeMin = as.character( sqldf("select min(dateString) from df") )
time01 = as.character( sqldf("select max(dateString) from df where ratio<0.1") )
time001 = as.character( sqldf("select max(dateString) from df where ratio<0.01") )
timeMax = as.character( sqldf("select max(dateString) from df") )
time0001 = as.character( sqldf("select max(dateString) from df where ratio<0.001") )
return(list(timeMin=timeMin,
time01=time01,
time001=time001,
time0001=time0001,
timeMax=timeMax))
}
#
# main
#
cities = NULL
city = 'London'
writeLines( paste("\n\nAnalysing", city) )
# loading data
#
reviews = read.csv( paste0("data/", city, "/reviews.csv") )
# structure of the data
#
writeLines("... structure of the data")
print( names(reviews) )
writeLines("... structure of time")
print( head(reviews$date) )
# grouping data
#
listings = sqldf("select listing_id, min(date) date, count(*) n_reviews from reviews group by listing_id")
# ordering data
#
reviews = sqldf("select * from reviews order by date")
listings = sqldf("select * from listings order by date")
# transforming data types
#
reviews = pre_processing(reviews)
listings = pre_processing(listings)
plotting(reviews, city, "reviews")
plotting(listings, city, "listings")
time_reviews = computing_time(reviews)
time_listings = computing_time(listings)
source('~/Dropbox/work/papers/papers2017/TBD (airbnb)/analysis/03_temporal/temporal.R', echo=TRUE)
source('~/Dropbox/work/papers/papers2017/TBD (airbnb)/analysis/03_temporal/temporal.R', echo=TRUE)
View(cities)
source('~/Dropbox/work/papers/papers2017/TBD (airbnb)/analysis/03_temporal/temporal.R', echo=TRUE)
library(lubridate)
library(ggplot2)
library(sqldf)
dirs = list.files("../../data/insideairbnb/")
pre_processing = function(df)
{
df$dateString = df$date
df$date = ymd(df$date)
df$listing_id = factor(df$listing_id)
df$seq = row.names(df)
df$cumsum = cumsum(df$seq)
df$ratio = df$cumsum/max(df$cumsum)
return(df)
}
plotting = function(df, city, sub_title)
{
pdf( paste0("plots/", city, "_", sub_title, ".pdf") , width=5, height=5)
myplot = ggplot(df, aes(x=date, y=ratio)) +
geom_line() +
scale_y_log10() +
geom_hline(yintercept=0.1, linetype="dotted") +
geom_hline(yintercept=0.01, linetype="dotted") +
geom_hline(yintercept=0.001, linetype="dotted") +
ggtitle( paste(city, "-", sub_title) )
print(myplot)
dev.off()
}
computing_time = function(df)
{
timeMin = as.character( sqldf("select min(dateString) from df") )
time01 = as.character( sqldf("select max(dateString) from df where ratio<0.1") )
time001 = as.character( sqldf("select max(dateString) from df where ratio<0.01") )
time0001 = as.character( sqldf("select max(dateString) from df where ratio<0.001") )
timeMax = as.character( sqldf("select max(dateString) from df") )
return(list(timeMin=timeMin,
time01=time01,
time001=time001,
time0001=time0001,
timeMax=timeMax))
}
cities = NULL
city = 'London'
writeLines( paste("\n\nAnalysing", city) )
reviews = read.csv( paste0("data/", city, "/reviews.csv") )
reviews = read.csv( paste0("../../data/insideairbnb/", city, "/reviews.csv") )
source('~/Dropbox/work/papers/papers2017/TBD (airbnb)/analysis/03_temporal/temporal.R', echo=TRUE)
View(cities)
View(cities)
write.table(cites, file = "output/cities_temporal.csv", sep = ",", row.names = F)
cites
write.table(cities, file = "output/cities_temporal.csv", sep = ",", row.names = F)
source('~/Dropbox/work/papers/papers2017/TBD (airbnb)/analysis/03_temporal/temporal.R', echo=TRUE)
# Warning:
# This script needs the data in the format of yyyy-mm-dd. E.g., '2014-02-26'.
# Check if this is the case for the considered cities.
library(lubridate)
library(ggplot2)
library(sqldf)
#
# functions
#
pre_processing = function(df)
{
df$dateString = df$date
df$date = ymd(df$date)
df$listing_id = factor(df$listing_id)
df$seq = row.names(df)
df$cumsum = cumsum(df$seq)
df$ratio = df$cumsum/max(df$cumsum)
return(df)
}
plotting = function(df, city, sub_title)
{
pdf( paste0("plots/", city, "_", sub_title, ".pdf") , width=5, height=5)
myplot = ggplot(df, aes(x=date, y=ratio)) +
geom_line() +
scale_y_log10() +
geom_hline(yintercept=0.1, linetype="dotted") +
geom_hline(yintercept=0.01, linetype="dotted") +
geom_hline(yintercept=0.001, linetype="dotted") +
ggtitle( paste(city, "-", sub_title) )
print(myplot)
dev.off()
}
computing_time = function(df)
{
timeMin = as.character( sqldf("select min(dateString) from df") )
time01 = as.character( sqldf("select max(dateString) from df where ratio<0.1") )
time001 = as.character( sqldf("select max(dateString) from df where ratio<0.01") )
time0001 = as.character( sqldf("select max(dateString) from df where ratio<0.001") )
timeMax = as.character( sqldf("select max(dateString) from df") )
return(list(timeMin=timeMin,
time01=time01,
time001=time001,
time0001=time0001,
timeMax=timeMax))
}
data_dir = "../../data/insideairbnb/"
allcities = list.files( data_dir)
cities = NULL
source('~/Dropbox/work/papers/papers2017/TBD (airbnb)/analysis/03_temporal/temporal.R', echo=TRUE)

theme(axis.text.x = element_text(angle=90, hjust=1, vjust=0.5))
term_freq_highFreq = term_freq[avg_tf>0.025 & (tf_ratio>2 | tf_ratio<1/2)]
names(term_freq_highFreq)
ggplot(term_freq_highFreq, aes(x=word, y=tf_ratio)) +
geom_bar(stat="identity", aes(fill=avg_tf), col=1) +
facet_grid(year ~ .) +
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=0.5))
ggplot(term_freq_highFreq, aes(x=word, y=tf_ratio)) +
geom_bar(stat="identity", aes(fill=avg_tf), col=1) +
facet_wrap(year) +
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=0.5))
ggplot(term_freq_highFreq, aes(x=word, y=tf_ratio)) +
geom_bar(stat="identity", aes(fill=avg_tf), col=1) +
facet_wrap(year ~ .) +
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=0.5))
ggplot(term_freq_highFreq, aes(x=word, y=tf_ratio)) +
geom_bar(stat="identity", aes(fill=avg_tf), col=1) +
facet_wrap(~year, nrow=2, scales="free") +
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=0.5))
ggplot(term_freq_highFreq, aes(x=word, y=tf_ratio)) +
geom_bar(stat="identity", aes(fill=avg_tf), col=1) +
facet_wrap(~year, ncol=1, scales="free") +
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=0.5))
ggplot(term_freq_highFreq, aes(x=word, y=tf_ratio)) +
geom_bar(stat="identity", aes(fill=avg_tf), col=1) +
facet_wrap(~year, ncol=2, scales="free") +
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=0.5))
View(term_freq)
term_freq[word=='happi']
ggplot(term_freq_highFreq, aes(x=word, y=tf_ratio)) +
geom_bar(stat="identity", aes(fill=avg_tf), col=1) +
facet_wrap(~year, ncol=2, scales="free") +
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=0.5))
1/1.5
source("textAnalysisFunc.R")
#
# loading datast
#
library(RMySQL)
mydb = dbConnect(MySQL(), user='root', password='', dbname='airbnb', host='127.0.0.1')
# mydb = dbConnect(MySQL(), user='root', password='1234567890', dbname='airbnb', host='127.0.0.1')
dbListTables(mydb)
guest = load_from_db(mydb, "guest")
listing = load_from_db(mydb, "listing")
review = load_from_db(mydb, "review")
detach(package:RMySQL)
review = proces_review(review)
#
# reviews only for guests, from 2011 (too few reviews in 2010!) and in English
#
review_g = review[author_id %in% guest$id]
# review_test = NULL
# review_test = rbind(review_test, review_g[1])
# review_test = rbind(review_test, review_g[2])
# review_test = rbind(review_test, review_g[3])
# review_test = rbind(review_test, review_g[4])
nrow(review)
# 157131
nrow(review_g)
# 2203
#
# Why this huge discrepancy??
table(review_g$year)
# 2010 2011 2012 2013 2014 2015 2016 2017
#    9   45  159  131  178  263  517  395
review_g = review_g[year!=2010 & !is.na(year)]
review_g$inferredLanguage = textcat(review_g$comments)
ggplot(review_g, aes(inferredLanguage)) + geom_bar() + facet_grid(year ~ .)
review_g = review_g[inferredLanguage=='english']
#
# Length of reviews
#
summary(review_g$nwords)
ggplot(review_g, aes(x=factor(year), y=nwords)) + geom_boxplot() + geom_point(alpha=0.1, col=3) + ylim(0,250)
#
# text analysis
#
term_freq_long = quantText(review_g$comments, ngrams=1)
# plotText( review_g[review_g$year==2011]$comments, ngrams=1 )
# plotText( review_g[review_g$year==2012]$comments, ngrams=1 )
# plotText( review_g[review_g$year==2013]$comments, ngrams=1 )
# plotText( review_g[review_g$year==2014]$comments, ngrams=1 )
# plotText( review_g[review_g$year==2015]$comments, ngrams=1 )
# plotText( review_g[review_g$year==2016]$comments, ngrams=1 )
# plotText( review_g[review_g$year==2017]$comments, ngrams=1 )
term_freq_year = cbind(review_g[, c('year'), with=F], term_freq_long)
term_freq_year = term_freq_year[!is.na(year)]
term_freq_ungrouped = melt(term_freq_year, id.vars = c("year"))
colnames(term_freq_ungrouped) = c("year", "word", "value")
term_freq_ungrouped$value = ifelse(term_freq_ungrouped$value==0, 0, 1)
head(term_freq_ungrouped)
setkey(term_freq_ungrouped, year, word)
term_freq = term_freq_ungrouped[, sum(value), by=list(year, word)]
colnames(term_freq) = c("year", "word", "n")
summary(term_freq)
setkey(review_g, year)
review_g_year = review_g[, .N, by=year]
colnames(review_g_year) = c("year", "reviews")
setkey(term_freq, year)
setkey(review_g_year, year)
term_freq = term_freq[review_g_year, nomatch=0]
term_freq$tf = term_freq$n/term_freq$reviews
summary(term_freq)
setkey(term_freq, word)
term_freq_avgtf = term_freq[, mean(tf), by=word]
colnames(term_freq_avgtf) = c("word", "avg_tf")
summary(term_freq_avgtf)
setkey(term_freq, word)
setkey(term_freq_avgtf, word)
term_freq = term_freq[term_freq_avgtf, nomatch=0]
term_freq$tf_ratio = term_freq$tf/term_freq$avg_tf
summary(term_freq)
source('~/Dropbox/work/papers/papers2017/airbnb Nino/Gio/analysis/07_topic_analysis/textAnalysis.R', echo=TRUE)
source('~/Dropbox/work/papers/papers2017/airbnb Nino/Gio/analysis/07_topic_analysis/textAnalysis.R', echo=TRUE)
term_freq_highFreq = term_freq[avg_tf>0.025 & tf_ratio>1.5]
ggplot(term_freq_highFreq, aes(x=word, y=tf_ratio)) +
geom_bar(stat="identity", aes(fill=avg_tf), col=1) +
facet_wrap(~year, ncol=2, scales="free") +
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=0.5))
term_freq_highFreq = term_freq[avg_tf>0.025 & tf_ratio<1/1.5]
ggplot(term_freq_highFreq, aes(x=word, y=tf_ratio)) +
geom_bar(stat="identity", aes(fill=avg_tf), col=1) +
facet_wrap(~year, ncol=2, scales="free") +
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=0.5))
term_freq_highFreq = term_freq[avg_tf>0.03 & tf_ratio>1.5]
ggplot(term_freq_highFreq, aes(x=word, y=tf_ratio)) +
geom_bar(stat="identity", aes(fill=avg_tf), col=1) +
facet_wrap(~year, ncol=2, scales="free") +
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=0.5))
ggplot(term_freq_highFreq, aes(x=word, y=tf_ratio)) +
geom_bar(stat="identity", aes(fill=avg_tf^2), col=1) +
facet_wrap(~year, ncol=2, scales="free") +
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=0.5))
ggplot(term_freq_highFreq, aes(x=word, y=tf_ratio)) +
geom_bar(stat="identity", aes(fill=avg_tf^.25), col=1) +
facet_wrap(~year, ncol=2, scales="free") +
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=0.5))
ggplot(term_freq_highFreq, aes(x=word, y=tf_ratio)) +
geom_bar(stat="identity", aes(fill=avg_tf^.25), col=1) +
facet_wrap(~year, ncol=2, scales="free") +
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=0.5)) +
scale_fill_gradient(name = "count", trans = "log")
ggplot(term_freq_highFreq, aes(x=word, y=tf_ratio)) +
geom_bar(stat="identity", aes(fill=avg_tf), col=1) +
facet_wrap(~year, ncol=2, scales="free") +
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=0.5)) +
scale_fill_gradient(name = "count", trans = "log")
ggplot(term_freq_highFreq, aes(x=word, y=tf_ratio)) +
geom_bar(stat="identity", aes(fill=avg_tf), col=1) +
facet_wrap(~year, ncol=2, scales="free") +
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=0.5)) +
scale_fill_gradient(name = "popularity", trans = "log", breaks=c(0.05, 0.1, 0.12, 0.13, 0.1353))
ggplot(term_freq_highFreq, aes(x=word, y=tf_ratio)) +
geom_bar(stat="identity", aes(fill=avg_tf), col=1) +
facet_wrap(~year, ncol=2, scales="free") +
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=0.5)) +
scale_fill_gradient(name = "popularity", trans = "log",
breaks=c( min(term_freq_highFreq$tf_ratio),
median(term_freq_highFreq$tf_ratio),
max(term_freq_highFreq$tf_ratio) ))
ggplot(term_freq_highFreq, aes(x=word, y=tf_ratio)) +
geom_bar(stat="identity", aes(fill=avg_tf), col=1) +
facet_wrap(~year, ncol=2, scales="free") +
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=0.5)) +
scale_fill_gradient(name = "popularity", trans = "log" )
ggplot(term_freq_highFreq, aes(x=word, y=tf_ratio)) +
geom_bar(stat="identity", aes(fill=avg_tf), col=1) +
facet_wrap(~year, ncol=2, scales="free") +
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=0.5)) +
scale_fill_gradient(name = "popularity", trans = "log", breaks=c(0.05, 0.08, 0.1, 0.14) )
ggplot(term_freq_highFreq, aes(x=word, y=tf_ratio)) +
geom_bar(stat="identity", aes(fill=avg_tf), col=1) +
facet_wrap(~year, ncol=2, scales="free") +
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=0.5)) +
scale_fill_gradient(name = "popularity", trans = "log", breaks=c(0.05,0.06,0.08,0.1,0.12,0.14) )
ggplot(term_freq_highFreq, aes(x=word, y=tf_ratio)) +
geom_bar(stat="identity", aes(fill=avg_tf), col=1) +
facet_wrap(~year, ncol=2, scales="free") +
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=0.5)) +
scale_fill_gradient(name = "popularity", trans = "log", breaks=c(0.03,0.04,0.05,0.06,0.08,0.1,0.12,0.14) )
term_freq_highFreq = term_freq[avg_tf>0.03 & tf_ratio<1/1.5]
ggplot(term_freq_highFreq, aes(x=word, y=tf_ratio)) +
geom_bar(stat="identity", aes(fill=avg_tf), col=1) +
facet_wrap(~year, ncol=2, scales="free") +
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=0.5)) +
scale_fill_gradient(name = "popularity", trans = "log", breaks=c(0.04,0.05,0.06,0.08,0.1,0.12,0.14) )
ggplot(term_freq_highFreq, aes(x=word, y=tf_ratio)) +
geom_bar(stat="identity", aes(fill=avg_tf), col=1) +
facet_wrap(~year, ncol=2, scales="free") +
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=0.5)) +
scale_fill_gradient(name = "popularity", trans = "log")
ggplot(term_freq_highFreq, aes(x=word, y=tf_ratio)) +
geom_bar(stat="identity", aes(fill=avg_tf), col=1) +
facet_wrap(~year, ncol=2, scales="free") +
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=0.5)) +
scale_fill_gradient(name = "popularity", trans = "log", breaks=c(0.04,0.05,0.06,0.08,0.1,0.12,0.14,0.16,0.18) )
ggplot(term_freq_highFreq, aes(x=word, y=tf_ratio)) +
geom_bar(stat="identity", aes(fill=avg_tf), col=1) +
facet_wrap(~year, ncol=2, scales="free") +
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=0.5)) +
scale_fill_gradient(name = "popularity", trans = "log", breaks=c(0.04,0.05,0.06,0.08,0.1,0.12,0.14,0.2,0.25) )
source("textAnalysisFunc.R")
library(RMySQL)
mydb = dbConnect(MySQL(), user='root', password='', dbname='airbnb', host='127.0.0.1')
dbListTables(mydb)
guest = load_from_db(mydb, "guest")
listing = load_from_db(mydb, "listing")
review = load_from_db(mydb, "review")
detach(package:RMySQL)
review = proces_review(review)
review_g = review[author_id %in% guest$id]
nrow(review)
nrow(review_g)
table(review_g$year)
review_g = review_g[year!=2010 & !is.na(year)]
review_g$inferredLanguage = textcat(review_g$comments)
ggplot(review_g, aes(inferredLanguage)) + geom_bar() + facet_grid(year ~ .)
review_g = review_g[inferredLanguage=='english']
summary(review_g$nwords)
ggplot(review_g, aes(x=factor(year), y=nwords)) + geom_boxplot() + geom_point(alpha=0.1, col=3) + ylim(0,250)
term_freq_long = quantText(review_g$comments, ngrams=1)
term_freq_year = cbind(review_g[, c('year'), with=F], term_freq_long)
term_freq_year = term_freq_year[!is.na(year)]
term_freq_ungrouped = melt(term_freq_year, id.vars = c("year"))
colnames(term_freq_ungrouped) = c("year", "word", "value")
term_freq_ungrouped$value = ifelse(term_freq_ungrouped$value==0, 0, 1)
head(term_freq_ungrouped)
term_freq_long = quantText(review_g$comments, ngrams=2)
term_freq_year = cbind(review_g[, c('year'), with=F], term_freq_long)
term_freq_year = term_freq_year[!is.na(year)]
term_freq_ungrouped = melt(term_freq_year, id.vars = c("year"))
colnames(term_freq_ungrouped) = c("year", "word", "value")
term_freq_ungrouped$value = ifelse(term_freq_ungrouped$value==0, 0, 1)
head(term_freq_ungrouped)
setkey(term_freq_ungrouped, year, word)
term_freq = term_freq_ungrouped[, sum(value), by=list(year, word)]
colnames(term_freq) = c("year", "word", "n")
summary(term_freq)
setkey(review_g, year)
review_g_year = review_g[, .N, by=year]
colnames(review_g_year) = c("year", "reviews")
setkey(term_freq, year)
setkey(review_g_year, year)
term_freq = term_freq[review_g_year, nomatch=0]
term_freq$tf = term_freq$n/term_freq$reviews
summary(term_freq)
setkey(term_freq, word)
term_freq_avgtf = term_freq[, mean(tf), by=word]
colnames(term_freq_avgtf) = c("word", "avg_tf")
summary(term_freq_avgtf)
setkey(term_freq, word)
setkey(term_freq_avgtf, word)
term_freq = term_freq[term_freq_avgtf, nomatch=0]
term_freq$tf_ratio = term_freq$tf/term_freq$avg_tf
summary(term_freq)
head(term_freq)
0.007792208/0.001113173
term_freq
0.003389831/0.0004842615
summary(term_freq)
term_freq_highFreq = term_freq[avg_tf>0.01 & tf_ratio>1.5]
ggplot(term_freq_highFreq, aes(x=word, y=tf_ratio)) +
geom_bar(stat="identity", aes(fill=avg_tf), col=1) +
facet_wrap(~year, ncol=2, scales="free") +
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=0.5)) +
scale_fill_gradient(name = "popularity", trans = "log", breaks=c(0.04,0.05,0.06,0.08,0.1,0.12,0.14) )
ggplot(term_freq_highFreq, aes(x=word, y=tf_ratio)) +
geom_bar(stat="identity", aes(fill=avg_tf), col=1) +
facet_wrap(~year, ncol=2, scales="free") +
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=0.5)) +
scale_fill_gradient(name = "popularity", trans = "log" )
term_freq[word=='san_francisco']
term_freq_highFreq = term_freq[avg_tf>0.03 & tf_ratio>1.5]
ggplot(term_freq_highFreq, aes(x=word, y=tf_ratio)) +
geom_bar(stat="identity", aes(fill=avg_tf), col=1) +
facet_wrap(~year, ncol=2, scales="free") +
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=0.5)) +
scale_fill_gradient(name = "popularity", trans = "log" )
term_freq_highFreq = term_freq[avg_tf>0.03 & tf_ratio<1/1.5]
ggplot(term_freq_highFreq, aes(x=word, y=tf_ratio)) +
geom_bar(stat="identity", aes(fill=avg_tf), col=1) +
facet_wrap(~year, ncol=2, scales="free") +
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=0.5)) +
scale_fill_gradient(name = "popularity", trans = "log" )
term_freq_highFreq = term_freq[avg_tf>0.03 & (tf_ratio>1.5 | tf_ratio<1/1.5)]
ggplot(term_freq_highFreq, aes(x=word, y=tf_ratio)) +
geom_bar(stat="identity", aes(fill=avg_tf), col=1) +
facet_wrap(~year, ncol=2, scales="free") +
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=0.5)) +
scale_fill_gradient(name = "popularity", trans = "log" )
c
source("textAnalysisFunc.R")
library(RMySQL)
mydb = dbConnect(MySQL(), user='root', password='', dbname='airbnb', host='127.0.0.1')
dbListTables(mydb)
guest = load_from_db(mydb, "guest")
listing = load_from_db(mydb, "listing")
review = load_from_db(mydb, "review")
detach(package:RMySQL)
review = proces_review(review)
review_g = review[author_id %in% guest$id]
source('~/Dropbox/work/papers/papers2017/airbnb Nino/Gio/analysis/07_topic_analysis/textAnalysis.R', echo=TRUE)
plotText( review_g[review_g$year==2017]$comments, ngrams=1 )
plotText( review_g[review_g$year==2016]$comments, ngrams=1 )
stopwords("english")
head(term_freq)
ggplot(term_freq, aes(n)) + geom_histogram() + facet_grid(~.year)
ggplot(term_freq, aes(n)) + geom_histogram()
ggplot(term_freq, aes(n)) + geom_histogram() + facet_wrap(~year, ncol=2, scales="free")
ggplot(term_freq, aes(n)) +
geom_histogram() +
scale_x_sqrt() +
scale_y_sqrt() +
facet_wrap(~year, ncol=2, scales="free")
ggplot(term_freq, aes(n)) +
geom_histogram() +
scale_x_sqrt( braks=c(0,1,2,3,5,10,50,100) ) +
scale_y_sqrt( braks=c(0,1,2,3,5,10,50,100,500,1000,2000,5000) ) +
facet_wrap(~year, ncol=2, scales="free")
ggplot(term_freq, aes(n)) +
geom_histogram() +
scale_x_sqrt( breaks=c(0,1,2,3,5,10,50,100) ) +
scale_y_sqrt( breaks=c(0,1,2,3,5,10,50,100,500,1000,2000,5000) ) +
facet_wrap(~year, ncol=2, scales="free")
term_freq2011 = term_freq[year==2011]
View(term_freq2011)
term_freq2011[oder(n)]
term_freq2011[order(n)]
term_freq2011 = term_freq2011[order(n)]
View(term_freq2011)
term_freq2011 = term_freq2011[order(-n)]
View(term_freq2011)
term_freq2011$cumN = cumsum(term_freq$n)
term_freq2011$cumN = cumsum(term_freq2011$n)
View(term_freq2011)
term_freq2011$cumN_ratio = term_freq2011$cumN/max(term_freq2011$cumN)
View(term_freq2011)
term_freq_long = quantText(review_g$comments, ngrams=2)
# plotText( review_g[review_g$year==2011]$comments, ngrams=1 )
# plotText( review_g[review_g$year==2012]$comments, ngrams=1 )
# plotText( review_g[review_g$year==2013]$comments, ngrams=1 )
# plotText( review_g[review_g$year==2014]$comments, ngrams=1 )
# plotText( review_g[review_g$year==2015]$comments, ngrams=1 )
# plotText( review_g[review_g$year==2016]$comments, ngrams=1 )
# plotText( review_g[review_g$year==2017]$comments, ngrams=1 )
term_freq_year = cbind(review_g[, c('year'), with=F], term_freq_long)
term_freq_year = term_freq_year[!is.na(year)]
term_freq_ungrouped = melt(term_freq_year, id.vars = c("year"))
colnames(term_freq_ungrouped) = c("year", "word", "value")
term_freq_ungrouped$value = ifelse(term_freq_ungrouped$value==0, 0, 1)
head(term_freq_ungrouped)
setkey(term_freq_ungrouped, year, word)
term_freq = term_freq_ungrouped[, sum(value), by=list(year, word)]
colnames(term_freq) = c("year", "word", "n")
summary(term_freq)
setkey(review_g, year)
review_g_year = review_g[, .N, by=year]
colnames(review_g_year) = c("year", "reviews")
setkey(term_freq, year)
setkey(review_g_year, year)
term_freq = term_freq[review_g_year, nomatch=0]
term_freq$tf = term_freq$n/term_freq$reviews
summary(term_freq)
setkey(term_freq, word)
term_freq_avgtf = term_freq[, mean(tf), by=word]
colnames(term_freq_avgtf) = c("word", "avg_tf")
summary(term_freq_avgtf)
setkey(term_freq, word)
setkey(term_freq_avgtf, word)
term_freq = term_freq[term_freq_avgtf, nomatch=0]
term_freq$tf_ratio = term_freq$tf/term_freq$avg_tf
summary(term_freq)
head(term_freq)
term_freq_highFreq = term_freq[avg_tf>0.03 & tf_ratio>1.5]
ggplot(term_freq_highFreq, aes(x=word, y=tf_ratio)) +
geom_bar(stat="identity", aes(fill=avg_tf), col=1) +
facet_wrap(~year, ncol=2, scales="free") +
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=0.5)) +
scale_fill_gradient(name = "popularity", trans = "log" )
term_freq_highFreq = term_freq[avg_tf>0.03 & tf_ratio<1/1.5]
ggplot(term_freq_highFreq, aes(x=word, y=tf_ratio)) +
geom_bar(stat="identity", aes(fill=avg_tf), col=1) +
facet_wrap(~year, ncol=2, scales="free") +
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=0.5)) +
scale_fill_gradient(name = "popularity", trans = "log" )
ggplot(term_freq, aes(n)) +
geom_histogram() +
scale_x_sqrt( breaks=c(0,1,2,3,5,10,50,100) ) +
scale_y_sqrt( breaks=c(0,1,2,3,5,10,50,100,500,1000,2000,5000) ) +
facet_wrap(~year, ncol=2, scales="free")
term_freq2011 = term_freq[year==2011]
term_freq2011 = term_freq2011[order(-n)]
term_freq2011$cumN = cumsum(term_freq2011$n)
term_freq2011$cumN_ratio = term_freq2011$cumN/max(term_freq2011$cumN)
View(term_freq2011)
library(topicmodels)
install.packages("topicmodels")
library(topicmodels)
data("AssociatedPress")
AssociatedPress
head(AssociatedPress)
head(AssociatedPress$i)
head(AssociatedPress$j)
head(AssociatedPress$v)
head(AssociatedPress$nrow)
head(AssociatedPress$ncol)
head(AssociatedPress$dimnames)
AssociatedPress
library(tm)
setwd(“C:\\Users\\Kailash\\Documents\\TextMining”)
filenames <- list.files(getwd(),pattern=”*.txt”)
library(topicmodels)
source('~/Dropbox/work/papers/papers2017/airbnb Nino/Gio/analysis/07_topic_analysis/textAnalysisFunc.R', echo=TRUE)
setwd("~/Dropbox/work/papers/papers2017/airbnb Nino/Gio/analysis/07_topic_analysis/textMiningExample")
setwd("~/Dropbox/work/papers/papers2017/airbnb Nino/Gio/analysis/07_topic_analysis/textMiningExample/textmining")
library(tm)
filenames <- list.files(getwd(),pattern="*.txt")
files <- lapply(filenames,readLines)
docs <- Corpus(VectorSource(files))
source('~/Dropbox/work/papers/papers2017/airbnb Nino/Gio/analysis/07_topic_analysis/textMiningExample/tm.R', echo=TRUE)
dtm
#load text mining library
library(tm)
#load files into corpus
#get listing of .txt files in directory
filenames <- list.files(getwd(),pattern="*.txt")
#read files into a character vector
files <- lapply(filenames,readLines)
#create corpus from vector
docs <- Corpus(VectorSource(files))
#inspect a particular document in corpus
writeLines(as.character(docs[[30]]))
#start preprocessing
#Transform to lower case
docs <-tm_map(docs,content_transformer(tolower))
toSpace <- content_transformer(function(x, pattern) { return (gsub(pattern, " ", x))})
docs <- tm_map(docs, toSpace, "-")
docs <- tm_map(docs, toSpace, "’")
docs <- tm_map(docs, toSpace, "‘")
docs <- tm_map(docs, toSpace, "•")
docs <- tm_map(docs, removePunctuation)
docs <- tm_map(docs, removeNumbers)
docs <- tm_map(docs, removeWords, stopwords("english"))
docs <- tm_map(docs, stripWhitespace)
writeLines(as.character(docs[[30]]))
docs <- tm_map(docs,stemDocument)
docs <- tm_map(docs, content_transformer(gsub),
pattern = "organiz", replacement = "organ")
docs <- tm_map(docs, content_transformer(gsub),
pattern = "organis", replacement = "organ")
docs <- tm_map(docs, content_transformer(gsub),
pattern = "andgovern", replacement = "govern")
docs <- tm_map(docs, content_transformer(gsub),
pattern = "inenterpris", replacement = "enterpris")
docs <- tm_map(docs, content_transformer(gsub),
pattern = "team-", replacement = "team")
myStopwords <- c("can", "say","one","way","use",
"also","howev","tell","will",
"much","need","take","tend","even",
"like","particular","rather","said",
"get","well","make","ask","come","end",
"first","two","help","often","may",
"might","see","someth","thing","point",
"post","look","right","now","think","‘ve ",
"‘re ","anoth","put","set","new","good",
"want","sure","kind","larg","yes,","day","etc",
"quit","sinc","attempt","lack","seen","awar",
"littl","ever","moreov","though","found","abl",
"enough","far","earli","away","achiev","draw",
"last","never","brief","bit","entir","brief",
"great","lot")
docs <- tm_map(docs, removeWords, myStopwords)
writeLines(as.character(docs[[30]]))
head(docs)
docs$`1`
docs$`2`
docs$`30`
dtm <- DocumentTermMatrix(docs)
source('~/Dropbox/work/papers/papers2017/airbnb Nino/Gio/analysis/07_topic_analysis/textAnalysis.R', echo=TRUE)
setwd("~/Dropbox/work/papers/papers2017/airbnb Nino/Gio/analysis/07_topic_analysis")
source('~/Dropbox/work/papers/papers2017/airbnb Nino/Gio/analysis/07_topic_analysis/textAnalysis.R', echo=TRUE)
library(ineq)
ineq( c(1,1,1) ,type="Gini")
ineq( c(100,1,1) ,type="Gini")
ineq( c(100000,1,1) ,type="Gini")
ineq( term_freq[year=2011]$n ,type="Gini")
term_freq[year=2011]$n
term_freq[term_freq$year=2011]$n
ineq( term_freq[year==2011]$n ,type="Gini")
ineq( term_freq[year==2012]$n ,type="Gini")
ineq( term_freq[year==2013]$n ,type="Gini")
ineq( term_freq[year==2014]$n ,type="Gini")
ineq( term_freq[year==2015]$n ,type="Gini")
ineq( term_freq[year==2016]$n ,type="Gini")
ineq( term_freq[year==2017]$n ,type="Gini")
unique(term_freq[year==2011 & n>0]$n)
length( unique(term_freq[year==2011 & n>0]$n) )
length( unique(term_freq[year==2011 & n>0]$word) )
length( unique(term_freq[year==2011 & n>1]$word) )
length( unique(term_freq[year==2012 & n>1]$word) )
length( unique(term_freq[year==2013 & n>1]$word) )
length( unique(term_freq[year==2014 & n>1]$word) )
length( unique(term_freq[year==2015 & n>1]$word) )
length( unique(term_freq[year==2016 & n>1]$word) )
length( unique(term_freq[year==2017 & n>1]$word) )
length( unique(term_freq[year==2011 & n>0]$word) )
length( unique(term_freq[year==2012 & n>0]$word) )
length( unique(term_freq[year==2013 & n>0]$word) )
length( unique(term_freq[year==2014 & n>0]$word) )
length( unique(term_freq[year==2015 & n>0]$word) )
length( unique(term_freq[year==2016 & n>0]$word) )
length( unique(term_freq[year==2017 & n>0]$word) )

setorder(locales, -cnt)
locales$tcnt = cumsum(locales$cnt)
nrow( locales[cnt>2] )/nrow( locales )
max( locales[cnt>2]$tcnt )/max( locales$tcnt )
write.table(locales, row.names = F, col.names = T, file = "locales.csv", sep = ";")
countries = fread("Country.csv")
library(stringr)
countries$city = str_replace_all(countries$city, ' ', '')
doc_term2$locale = str_replace_all(doc_term2$locale, ' ', '')
doc_term3 = as.data.table( sqldf("select t1.*,
t2.country as country_guest,
t3.city as city_listing,
t3.country as country_listing
from doc_term2 t1
left join countries t2 on t1.locale=t2.city
left join listing t3 on t1.listing_id=t3.id")
)
doc_term3$country_guest = str_replace_all(doc_term3$country_guest, '"', '')
doc_term3$country_listing = str_replace_all(doc_term3$country_listing, '"', '')
cultural = fread("world_cultural_factors.csv")
#
# do the countries have the same names as in cultural?
#
countries_guest = doc_term3[, .(cnt=length(comments)), by=country_guest]
setorder(countries_guest, -cnt)
countries_listing = doc_term3[, .(cnt=length(comments)), by=country_listing]
setorder(countries_listing, -cnt)
cultural$country
# [1] "Argentina"            "Australia"            "Austria"              "Belgium"              "Brazil"
# [6] "Canada"               "China"                "Colombia"             "Costa Rica"           "Denmark"
# [11] "Ecuador"              "Egypt"                "El Salvador"          "Finland"              "France"
# [16] "Germany"              "Greece"               "Guatemala"            "Hong Kong"            "India"
# [21] "Indonesia"            "Iran"                 "Iraq"                 "Ireland"              "Israel"
# [26] "Italy"                "Jamaica"              "Japan"                "Libya"                "Malaysia"
# [31] "Mexico"               "Netherlands"          "New Zealand"          "Nigeria"              "Norway"
# [36] "Pakistan"             "Panama"               "Peru"                 "Philippines"          "Poland"
# [41] "Portugal"             "Russia"               "Saudi Arabia"         "Sierra Leon"          "Singapore"
# [46] "South Korea"          "Spain"                "Sweden"               "Switzerland"          "Switzerland"
# [51] "Taiwan"               "Thailand"             "Turkey"               "United Arab Emirates" "United Kingdom"
# [56] "United States"        "Uruguay"              "Venezuela"
countries_guest$country_guest[1:20]
# [1] NA            "USA"         "UK"          "Canada"      "Germany"     "France"      "Australia"   "Italy"       "Netherlands"
# [10] "Spain"       "Singapore"   "Switzerland" "Denmark"     "Russia"      "Ireland"     "New Zealand" "Brazil"      "Hong Kong"
# [19] "Portugal"    "Israel"
countries_listing$country_listing[1:20]
# [1] NA               "United States"  "null"           "United Kingdom" "Italy"          "Canada"         "Spain"
# [8] "France"         "Australia"      "Japan"          "Mexico"         "Portugal"       "Germany"        "Greece"
# [15] "Netherlands"    "Ireland"        "Croatia"        "Indonesia"      "New Zealand"    "Czech Republic"
doc_term3[country_guest=="USA"] <- "United States"
doc_term3[country_guest=="UK"] <- "United Kingdom"
View(doc_term3)
nrow(doc_term3[is.na(country_guest)])/nrow(doc_term3)
nrow(doc_term3[is.na(country_listing)])/nrow(doc_term3)
names(cultural)
ggplot(cultural, aes(x=power_distance, y=GDP_per_capita_in_dollars)) + geom_smooth() + geom_point()
ggplot(cultural, aes(x=individualism, y=GDP_per_capita_in_dollars)) + geom_smooth() + geom_point()
ggplot(cultural, aes(x=overall_pace_means, y=GDP_per_capita_in_dollars)) + geom_smooth() + geom_point()
doc_term3[country_guest=="USA"]
nrow(doc_term3[is.na(country_guest)])/nrow(doc_term3)
doc_term4 = as.data.table(
sqldf("select t1.*,
t2.GDP_per_capita_in_dollars GDP_guest, t3.GDP_per_capita_in_dollars GDP_listing,
t2.individualism individualism_guest, t3.individualism individualism_listing
from doc_term3 t1
left join cultural t2 on t1.country_guest=t2.country
left join cultural t3 on t1.country_listing=t3.country")
)
doc_term4$GDP_delta = doc_term4$GDP_listing - doc_term4$GDP_guest
doc_term4$GDP_guest_br = cut(doc_term4$GDP_guest, breaks=10)
doc_term4$GDP_listing_br = cut(doc_term4$GDP_listing, breaks=10)
doc_term4$GDP_delta = doc_term4$GDP_listing - doc_term4$GDP_guest
doc_term4$GDP_guest_br = cut(doc_term4$GDP_guest, breaks=6)
doc_term4$GDP_listing_br = cut(doc_term4$GDP_listing, breaks=6)
doc_term4$GDP_delta_br = cut(doc_term4$GDP_delta, breaks=6)
names(doc_term4)
ggplot( doc_term4, aes(x=GDP_guest_br, y=social_vs_home) ) +
geom_boxplot(outlier.shape=NA) +
geom_point(size=.5, alpha=.01)
ggplot( doc_term4, aes(x=GDP_guest_br, y=pos_vs_neg) ) +
geom_boxplot(outlier.shape=NA) +
geom_point(size=.5, alpha=.01)
ggplot( doc_term4, aes(x=GDP_listing_br, y=social_vs_home) ) +
geom_boxplot(outlier.shape=NA) +
geom_point(size=.5, alpha=.01)
ggplot( doc_term4, aes(x=GDP_listing_br, y=pos_vs_neg) ) +
geom_boxplot(outlier.shape=NA) +
geom_point(size=.5, alpha=.01)
ggplot( doc_term4, aes(x=GDP_delta_br, y=social_vs_home) ) +
geom_boxplot(outlier.shape=NA) +
geom_point(size=.5, alpha=.01)
doc_term4$individualism_delta = doc_term4$individualism_listing - doc_term4$individualism_guest
doc_term4$individualism_guest_br = cut(doc_term4$individualism_guest, breaks=6)
doc_term4$individualism_listing_br = cut(doc_term4$individualism_listing, breaks=6)
doc_term4$individualism_delta_br = cut(doc_term4$individualism_delta, breaks=6)
ggplot( doc_term4, aes(x=individualism_guest_br, y=social_vs_home) ) +
geom_boxplot(outlier.shape=NA) +
geom_point(size=.5, alpha=.01)
ggplot( doc_term4, aes(x=individualism_guest_br, y=pos_vs_neg) ) +
geom_boxplot(outlier.shape=NA) +
geom_point(size=.5, alpha=.01)
ggplot( doc_term4, aes(x=individualism_listing_br, y=social_vs_home) ) +
geom_boxplot(outlier.shape=NA) +
geom_point(size=.5, alpha=.01)
ggplot( doc_term4, aes(x=individualism_listing_br, y=pos_vs_neg) ) +
geom_boxplot(outlier.shape=NA) +
geom_point(size=.5, alpha=.01)
ggplot( doc_term4, aes(x=individualism_delta_br, y=social_vs_home) ) +
geom_boxplot(outlier.shape=NA) +
geom_point(size=.5, alpha=.01)
ggplot( doc_term4, aes(x=individualism_delta_br, y=pos_vs_neg) ) +
geom_boxplot(outlier.shape=NA) +
geom_point(size=.5, alpha=.01)
ggplot( na.omit(doc_term4), aes(x=individualism_delta_br, y=pos_vs_neg) ) +
geom_boxplot(outlier.shape=NA) +
geom_point(size=.5, alpha=.01)
ggplot( na.omit(doc_term4), aes(x=individualism_delta_br, y=pos_vs_neg) ) +
geom_boxplot(outlier.shape=NA) +
geom_point(size=.5, alpha=.01, col=4)
ggplot( na.omit(doc_term4), aes(x=individualism_delta_br, y=pos_vs_neg) ) +
geom_boxplot(outlier.shape=NA) +
geom_jitter(size=.5, alpha=.01, col=4, width=.2, height=0)
ggplot( na.omit(doc_term4), aes(x=individualism_delta_br, y=pos_vs_neg) ) +
geom_boxplot(outlier.shape=NA) +
geom_jitter(size=.5, alpha=.1, col=4, width=.1, height=0)
ggplot( na.omit(doc_term4), aes(x=individualism_delta_br, y=pos_vs_neg) ) +
geom_jitter(size=.5, alpha=.1, col=4, width=.1, height=0) +
geom_boxplot(outlier.shape=NA, alpha=0)
ggplot( na.omit(doc_term4), aes(x=individualism_delta_br, y=pos_vs_neg) ) +
geom_jitter(size=.5, alpha=.1, col=4, width=.1, height=0) +
geom_boxplot(outlier.shape=NA, alpha=0.2)
ggplot( na.omit(doc_term4), aes(x=individualism_delta_br, y=pos_vs_neg) ) +
geom_jitter(size=.5, alpha=.1, col=4, width=.1, height=0) +
geom_boxplot(outlier.shape=NA, alpha=0.8)
ggplot( na.omit(doc_term4), aes(x=individualism_delta_br, y=pos_vs_neg) ) +
geom_jitter(size=.5, alpha=.1, col=4, width=.1, height=0) +
geom_boxplot(outlier.shape=NA, alpha=0.5)
ggplot( na.omit(doc_term4), aes(x=individualism_delta_br, y=pos_vs_neg) ) +
geom_jitter(size=.5, alpha=.1, col=4, width=.1, height=0) +
geom_violin() +
geom_boxplot(outlier.shape=NA, alpha=0.5)
ggplot( na.omit(doc_term4), aes(x=individualism_delta_br, y=pos_vs_neg) ) +
geom_jitter(size=.5, alpha=.1, col=4, width=.1, height=0) +
geom_violin(alpha=0.5) +
geom_boxplot(outlier.shape=NA, alpha=0.5, width=.1)
ggplot( na.omit(doc_term4), aes(x=individualism_delta_br, y=pos_vs_neg) ) +
geom_jitter(size=.5, alpha=.1, col=4, width=.1, height=0) +
geom_violin(alpha=0.5) +
geom_boxplot(outlier.shape=NA, alpha=0, width=.1)
ggplot( na.omit(doc_term4), aes(x=individualism_delta_br, y=pos_vs_neg) ) +
geom_jitter(size=.5, alpha=.1, col=4, width=.1, height=0) +
geom_violin(alpha=0) +
geom_boxplot(outlier.shape=NA, alpha=.5, width=.1)
ggplot( na.omit(doc_term4), aes(x=individualism_delta_br, y=pos_vs_neg) ) +
geom_jitter(size=.5, alpha=.1, col=4, width=.1, height=0) +
geom_violin(alpha=0) +
geom_boxplot(outlier.shape=NA, alpha=1, width=.05)
ggplot( na.omit(doc_term4), aes(x=individualism_delta_br, y=pos_vs_neg) ) +
geom_jitter(size=.5, alpha=.1, col=4, width=.15, height=0) +
geom_violin(alpha=0) +
geom_boxplot(outlier.shape=NA, alpha=1, width=.1, fill=3)
ggplot( na.omit(doc_term4), aes(x=individualism_delta_br, y=pos_vs_neg) ) +
geom_jitter(size=.5, alpha=.025, col=4, width=.15, height=0) +
geom_violin(alpha=0) +
geom_boxplot(outlier.shape=NA, alpha=1, width=.1, fill=3)
doc_term4 = as.data.table(
sqldf("select t1.*,
t2.GDP_per_capita_in_dollars GDP_guest, t3.GDP_per_capita_in_dollars GDP_listing,
t2.individualism individualism_guest, t3.individualism individualism_listing
from doc_term3 t1
left join cultural t2 on t1.country_guest=t2.country
left join cultural t3 on t1.country_listing=t3.country")
)
doc_term4$GDP_delta = doc_term4$GDP_listing - doc_term4$GDP_guest
doc_term4$individualism_delta = doc_term4$individualism_listing - doc_term4$individualism_guest
ApplyQuintiles <- function(x) {
cut(x, breaks=c(quantile(x, probs = seq(0, 1, by = 0.20))),
labels=c("0-20","20-40","40-60","60-80","80-100"), include.lowest=TRUE)
}
doc_term4$GDP_guest_br = sapply(doc_term4$GDP_guest, ApplyQuintiles)
x=doc_term4$GDP_guest
x
x = na.omit(x)
x
breaks=c(quantile(x, probs = seq(0, 1, by = 0.20))
)
breaks
ApplyQuintiles <- function(x) {
cut(x, breaks=c(quantile(na.omit(x), probs = seq(0, 1, by = 0.20))),
labels=c("0-20","20-40","40-60","60-80","80-100"), include.lowest=TRUE)
}
doc_term4$GDP_guest_br = sapply(doc_term4$GDP_guest, ApplyQuintiles)
library(dplyr)
ntile(x, 4)
ntile(x, 8)
doc_term4$GDP_guest_br = ntile(doc_term4$GDP_guest, 6)
remove(x)
doc_term4$GDP_guest_br = ntile(doc_term4$GDP_guest, 6)
doc_term4$GDP_listing_br = ntile(doc_term4$GDP_listing, 6)
doc_term4$GDP_delta_br = ntile(doc_term4$GDP_delta, 6)
doc_term4$individualism_guest_br = ntile(doc_term4$individualism_guest, 6)
doc_term4$individualism_listing_br = ntile(doc_term4$individualism_listing, 6)
doc_term4$individualism_delta_br = ntile(doc_term4$individualism_delta, 6)
ggplot( na.omit(doc_term4), aes(x=individualism_delta_br, y=pos_vs_neg) ) +
geom_jitter(size=.5, alpha=.025, col=4, width=.15, height=0) +
geom_violin(alpha=0) +
geom_boxplot(outlier.shape=NA, alpha=1, width=.1, fill=3)
doc_term4$GDP_guest_br = factor( ntile(doc_term4$GDP_guest, 6) )
doc_term4$GDP_listing_br = factor( ntile(doc_term4$GDP_listing, 6) )
doc_term4$GDP_delta_br = factor( ntile(doc_term4$GDP_delta, 6) )
doc_term4$individualism_guest_br = factor( ntile(doc_term4$individualism_guest, 6) )
doc_term4$individualism_listing_br = factor( ntile(doc_term4$individualism_listing, 6) )
doc_term4$individualism_delta_br = factor( ntile(doc_term4$individualism_delta, 6) )
ggplot( na.omit(doc_term4), aes(x=individualism_delta_br, y=pos_vs_neg) ) +
geom_jitter(size=.5, alpha=.025, col=4, width=.15, height=0) +
geom_violin(alpha=0) +
geom_boxplot(outlier.shape=NA, alpha=1, width=.1, fill=3)
source("myFunctions.R")
#
# loading datast
#
library(RMySQL)
mydb = dbConnect(MySQL(), user='root', password='', dbname='airbnb', host='127.0.0.1')
# mydb = dbConnect(MySQL(), user='root', password='1234567890', dbname='airbnb', host='127.0.0.1')
dbListTables(mydb)
guest = load_from_db(mydb, "guest")
host = load_from_db(mydb, "host")
listing = load_from_db(mydb, "listing")
review = load_from_db(mydb, "review")
review_language = load_from_db(mydb, "review_language")
word_count = load_from_db(mydb, "word_count")
detach(package:RMySQL)
setkey(review, idReview)
setkey(review_language, idReview)
review = review[review_language, nomatch=0]
remove(review_language)
#
# pre-processing
#
review = pre_proces_review(review)
print_reviewSummary(review)
#
# removing invalid entries and duplicates
#
review = review[author_id!='#']
print_reviewSummary(review)
library(sqldf)
review = as.data.table( sqldf("select * from review group by id") )
review = as.data.table( sqldf("select * from review group by author_id, listing_id, comments") )
print_reviewSummary(review)
#
# reviews only for guests which have a year
#
# review = review[!(author_id %in% listing$id_host) & !is.na(year)]
# print_reviewSummary(review)
#
# reviews only in English
#
review = english_review(review)
print_reviewSummary(review)
#
# length of reviews (too short reviews may not give statistical significant results)
#
# ggplot(review, aes(x=factor(year), y=nwords)) +
#   geom_violin(alpha=0.5, fill=3) +
#   geom_boxplot(width=.1, fill=7, outlier.size=NA) +
#   scale_y_log10(breaks=c(1,5,10,50,100,500,1000,5000))
#
# ggplot(review, aes(x=factor(year), y=nwords)) +
#   geom_jitter(alpha=0.01, size=.1, width=.3) +
#   geom_violin(alpha=0.5, fill=3) +
#   geom_boxplot(width=.1, fill=7, outlier.size=NA) +
#   ylim(0,200)
#
# review = review[nwords>10]
# print_reviewSummary(review)
#
# not an host
#
review = review[!author_id %in% host$Id]
print_reviewSummary(review)
#
# extract doc_term
#
library(quanteda)
mfdict <- dictionary(file = "LIWC2007_English080730.dic", format = "LIWC")
doc_term_matrix <- dfm(review$comments, stem = FALSE, dictionary = mfdict)
# doc_term_matrixN = doc_term_matrix/review$nwords
doc_term = data.table( data.frame(doc_term_matrix) )
detach(package:quanteda)
#
# defining metrics
#
doc_term2 = cbind(review[, c('author_id', 'listing_id', 'year', 'comments', 'locale',
'inferredLanguage', 'nwords'), with=F],
doc_term[, c('social', 'home', 'posemo', 'negemo'), with=F] )
doc_term2$social_vs_home = (doc_term2$social+3)/(doc_term2$home+3)
doc_term2$pos_vs_neg = (doc_term2$posemo+3)/(doc_term2$negemo+3)
summary(doc_term2[,c('social', 'home',
'posemo', 'negemo',
'social_vs_home', 'pos_vs_neg'), with=F])
setorder(doc_term2, social_vs_home)
doc_term2$comments[1:200]
setorder(doc_term2, social_vs_home)
doc_term2$comments[1:200]
setorder(doc_term2, social_vs_home)
doc_term2$comments[1:300]
setorder(doc_term2, -social_vs_home)
setorder(doc_term2, -social_vs_home)
doc_term2$comments[1:300]
setorder(doc_term2, pos_vs_neg)
doc_term2$comments[1:300]
setorder(doc_term2, -pos_vs_neg)
doc_term2$comments[1:300]
doc_term2$pos_vs_neg[1:300]
setorder(doc_term2, pos_vs_neg)
doc_term2$pos_vs_neg[1:300]
setorder(doc_term2, social_vs_home)
doc_term2$social_vs_home[1:300]
setorder(doc_term2, -social_vs_home)
doc_term2$social_vs_home[1:300]
setorder(doc_term2, pos_vs_neg)
doc_term2$pos_vs_neg[1:300]
setorder(doc_term2, -pos_vs_neg)
doc_term2$pos_vs_neg[1:300]
setorder(doc_term2, comments)
doc_term2$pos_vs_neg[1:300]
doc_term2$social_vs_home[1:300]
doc_term2$comments[1:300]
set.seed(4)
doc_term2$rnd = rnorm( nrow(doc_term2) )
setorder(doc_term2, rnd)
doc_term2$pos_vs_neg[1:300]
doc_term2$social_vs_home[1:300]
doc_term2$comments[1:300]
doc_term2$comments[1:300]
doc_term2 = doc_term2[, -c("rnd"), with=F]
# most common locales
locales = doc_term2[, .(cnt=length(comments)), by=locale]
setorder(locales, -cnt)
locales$tcnt = cumsum(locales$cnt)
nrow( locales[cnt>2] )/nrow( locales )
max( locales[cnt>2]$tcnt )/max( locales$tcnt )
write.table(locales, row.names = F, col.names = T, file = "locales.csv", sep = ";")
countries = fread("Country.csv")
library(stringr)
countries$city = str_replace_all(countries$city, ' ', '')
doc_term2$locale = str_replace_all(doc_term2$locale, ' ', '')
doc_term3 = as.data.table( sqldf("select t1.*,
t2.country as country_guest,
t3.city as city_listing,
t3.country as country_listing
from doc_term2 t1
left join countries t2 on t1.locale=t2.city
left join listing t3 on t1.listing_id=t3.id")
)
doc_term3$country_guest = str_replace_all(doc_term3$country_guest, '"', '')
doc_term3$country_listing = str_replace_all(doc_term3$country_listing, '"', '')
cultural = fread("world_cultural_factors.csv")
names(cultural)
# [1] "country"                   "selected_for"              "power_distance"            "individualism"
# [5] "masculinity"               "uncertainty_avoidance"     "long_term"                 "size_sq_km"
# [9] "population_est_2013"       "mobile_subscriber_million" "internet_users_million"    "GDP_per_capita_in_dollars"
# [13] "world_value_survey"        "overall_pace_means"
ggplot(cultural, aes(x=power_distance, y=GDP_per_capita_in_dollars)) + geom_smooth() + geom_point()
ggplot(cultural, aes(x=individualism, y=GDP_per_capita_in_dollars)) + geom_smooth() + geom_point()
ggplot(cultural, aes(x=overall_pace_means, y=GDP_per_capita_in_dollars)) + geom_smooth() + geom_point()
#
# do the countries have the same names as in cultural?
#
countries_guest = doc_term3[, .(cnt=length(comments)), by=country_guest]
setorder(countries_guest, -cnt)
countries_listing = doc_term3[, .(cnt=length(comments)), by=country_listing]
setorder(countries_listing, -cnt)
cultural$country
# [1] "Argentina"            "Australia"            "Austria"              "Belgium"              "Brazil"
# [6] "Canada"               "China"                "Colombia"             "Costa Rica"           "Denmark"
# [11] "Ecuador"              "Egypt"                "El Salvador"          "Finland"              "France"
# [16] "Germany"              "Greece"               "Guatemala"            "Hong Kong"            "India"
# [21] "Indonesia"            "Iran"                 "Iraq"                 "Ireland"              "Israel"
# [26] "Italy"                "Jamaica"              "Japan"                "Libya"                "Malaysia"
# [31] "Mexico"               "Netherlands"          "New Zealand"          "Nigeria"              "Norway"
# [36] "Pakistan"             "Panama"               "Peru"                 "Philippines"          "Poland"
# [41] "Portugal"             "Russia"               "Saudi Arabia"         "Sierra Leon"          "Singapore"
# [46] "South Korea"          "Spain"                "Sweden"               "Switzerland"          "Switzerland"
# [51] "Taiwan"               "Thailand"             "Turkey"               "United Arab Emirates" "United Kingdom"
# [56] "United States"        "Uruguay"              "Venezuela"
countries_guest$country_guest[1:20]
# [1] NA            "USA"         "UK"          "Canada"      "Germany"     "France"      "Australia"   "Italy"       "Netherlands"
# [10] "Spain"       "Singapore"   "Switzerland" "Denmark"     "Russia"      "Ireland"     "New Zealand" "Brazil"      "Hong Kong"
# [19] "Portugal"    "Israel"
countries_listing$country_listing[1:20]
# [1] NA               "United States"  "null"           "United Kingdom" "Italy"          "Canada"         "Spain"
# [8] "France"         "Australia"      "Japan"          "Mexico"         "Portugal"       "Germany"        "Greece"
# [15] "Netherlands"    "Ireland"        "Croatia"        "Indonesia"      "New Zealand"    "Czech Republic"
doc_term3[country_guest=="USA"] <- "United States"
doc_term3[country_guest=="UK"] <- "United Kingdom"
nrow(doc_term3[is.na(country_guest)])/nrow(doc_term3)
# [1] 0.3897496
#
# This the ratio of null in coutry_guest
nrow(doc_term3[is.na(country_listing)])/nrow(doc_term3)
# [1] 0.2285485
#
# This the ratio of null in coutry_listing
doc_term4 = as.data.table(
sqldf("select t1.*,
t2.GDP_per_capita_in_dollars GDP_guest, t3.GDP_per_capita_in_dollars GDP_listing,
t2.individualism individualism_guest, t3.individualism individualism_listing
from doc_term3 t1
left join cultural t2 on t1.country_guest=t2.country
left join cultural t3 on t1.country_listing=t3.country")
)
doc_term4$GDP_delta = doc_term4$GDP_listing - doc_term4$GDP_guest
doc_term4$individualism_delta = doc_term4$individualism_listing - doc_term4$individualism_guest
library(dplyr)
doc_term4$GDP_guest_br = factor( ntile(doc_term4$GDP_guest, 6) )
doc_term4$GDP_guest_br
table(doc_term4$GDP_guest_br)
doc_term4$GDP_listing_br = factor( ntile(doc_term4$GDP_listing, 6) )
doc_term4$GDP_delta_br = factor( ntile(doc_term4$GDP_delta, 6) )
doc_term4$individualism_guest_br = factor( ntile(doc_term4$individualism_guest, 6) )
doc_term4$individualism_listing_br = factor( ntile(doc_term4$individualism_listing, 6) )
doc_term4$individualism_delta_br = factor( ntile(doc_term4$individualism_delta, 6) )
table(doc_term4$GDP_listing_br)
table(doc_term4$GDP_delta_br)
ntile_na <- function(x,n)
{
notna <- !is.na(x)
out <- rep(NA_real_,length(x))
out[notna] <- ntile(x[notna],n)
return(out)
}
doc_term4$GDP_guest_br = factor( ntile_na(doc_term4$GDP_guest, 6) )
table(doc_term4$GDP_guest_br)
table(doc_term4$GDP_listing_br)
doc_term4$GDP_guest_br = factor( ntile_na(doc_term4$GDP_guest, 6) )
doc_term4$GDP_listing_br = factor( ntile_na(doc_term4$GDP_listing, 6) )
doc_term4$GDP_delta_br = factor( ntile_na(doc_term4$GDP_delta, 6) )
doc_term4$individualism_guest_br = factor( ntile_na(doc_term4$individualism_guest, 6) )
doc_term4$individualism_listing_br = factor( ntile_na(doc_term4$individualism_listing, 6) )
doc_term4$individualism_delta_br = factor( ntile_na(doc_term4$individualism_delta, 6) )
table(doc_term4$GDP_guest_br)
table(doc_term4$GDP_listing_br)
table(doc_term4$GDP_delta_br)
table(doc_term4$individualism_guest_br)
table(doc_term4$individualism_listing_br)
table(doc_term4$individualism_delta_br)
ggplot( doc_term4, aes(x=GDP_guest_br, y=social_vs_home) ) +
geom_boxplot(outlier.shape=NA) +
geom_point(size=.5, alpha=.01)
ggplot( doc_term4, aes(x=GDP_guest_br, y=social_vs_home) ) +
geom_jitter(size=.5, alpha=.025, col=4, width=.15, height=0) +
geom_violin(alpha=0) +
geom_boxplot(outlier.shape=NA, alpha=1, width=.1, fill=3)
ggplot( na.omit(doc_term4), aes(x=GDP_guest_br, y=social_vs_home) ) +
geom_jitter(size=.5, alpha=.025, col=4, width=.15, height=0) +
geom_violin(alpha=0) +
geom_boxplot(outlier.shape=NA, alpha=1, width=.1, fill=3)
ggplot( na.omit(doc_term4), aes(x=GDP_guest_br, y=pos_vs_neg) ) +
geom_jitter(size=.5, alpha=.025, col=4, width=.15, height=0) +
geom_violin(alpha=0) +
geom_boxplot(outlier.shape=NA, alpha=1, width=.1, fill=3)
ggplot( na.omit(doc_term4), aes(x=GDP_listing_br, y=social_vs_home) ) +
geom_jitter(size=.5, alpha=.025, col=4, width=.15, height=0) +
geom_violin(alpha=0) +
geom_boxplot(outlier.shape=NA, alpha=1, width=.1, fill=3)
ggplot( na.omit(doc_term4), aes(x=GDP_listing_br, y=pos_vs_neg) ) +
geom_jitter(size=.5, alpha=.025, col=4, width=.15, height=0) +
geom_violin(alpha=0) +
geom_boxplot(outlier.shape=NA, alpha=1, width=.1, fill=3)
ggplot( na.omit(doc_term4), aes(x=GDP_delta_br, y=social_vs_home) ) +
geom_jitter(size=.5, alpha=.025, col=4, width=.15, height=0) +
geom_violin(alpha=0) +
geom_boxplot(outlier.shape=NA, alpha=1, width=.1, fill=3)
ggplot( na.omit(doc_term4), aes(x=GDP_delta_br, y=pos_vs_neg) ) +
geom_jitter(size=.5, alpha=.025, col=4, width=.15, height=0) +
geom_violin(alpha=0) +
geom_boxplot(outlier.shape=NA, alpha=1, width=.1, fill=3)
ggplot( na.omit(doc_term4), aes(x=individualism_guest_br, y=social_vs_home) ) +
geom_jitter(size=.5, alpha=.025, col=4, width=.15, height=0) +
geom_violin(alpha=0) +
geom_boxplot(outlier.shape=NA, alpha=1, width=.1, fill=3)
ggplot( na.omit(doc_term4), aes(x=individualism_guest_br, y=pos_vs_neg) ) +
geom_jitter(size=.5, alpha=.025, col=4, width=.15, height=0) +
geom_violin(alpha=0) +
geom_boxplot(outlier.shape=NA, alpha=1, width=.1, fill=3)
ggplot( na.omit(doc_term4), aes(x=individualism_listing_br, y=social_vs_home) ) +
geom_jitter(size=.5, alpha=.025, col=4, width=.15, height=0) +
geom_violin(alpha=0) +
geom_boxplot(outlier.shape=NA, alpha=1, width=.1, fill=3)
ggplot( na.omit(doc_term4), aes(x=individualism_listing_br, y=pos_vs_neg) ) +
geom_jitter(size=.5, alpha=.025, col=4, width=.15, height=0) +
geom_violin(alpha=0) +
geom_boxplot(outlier.shape=NA, alpha=1, width=.1, fill=3)
ggplot( na.omit(doc_term4), aes(x=individualism_delta_br, y=social_vs_home) ) +
geom_jitter(size=.5, alpha=.025, col=4, width=.15, height=0) +
geom_violin(alpha=0) +
geom_boxplot(outlier.shape=NA, alpha=1, width=.1, fill=3)
ggplot( na.omit(doc_term4), aes(x=individualism_delta_br, y=pos_vs_neg) ) +
geom_jitter(size=.5, alpha=.025, col=4, width=.15, height=0) +
geom_violin(alpha=0) +
geom_boxplot(outlier.shape=NA, alpha=1, width=.1, fill=3)
source("myFunctions.R")
library(RMySQL)
mydb = dbConnect(MySQL(), user='root', password='', dbname='airbnb', host='127.0.0.1')
dbListTables(mydb)
guest = load_from_db(mydb, "guest")
host = load_from_db(mydb, "host")
listing = load_from_db(mydb, "listing")
review = load_from_db(mydb, "review")
review_language = load_from_db(mydb, "review_language")
word_count = load_from_db(mydb, "word_count")

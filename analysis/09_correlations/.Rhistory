names(locale)
names(isocode)
cityNames = locale
remove(locale)
setnames(cityNames, "cityName", "locale")
names(review)
names(cityNames)
names(isocode)
View(review)
review2 = review
setkey(review, locale)
View(review)
View(review2)
View(review2)
source("myFunctions.R")
#
# loading datast
#
library(RMySQL)
mydb = dbConnect(MySQL(), user='root', password='', dbname='airbnb', host='127.0.0.1')
# mydb = dbConnect(MySQL(), user='root', password='1234567890', dbname='airbnb', host='127.0.0.1')
dbListTables(mydb)
guest = load_from_db(mydb, "guest")
guestSeen = load_from_db(mydb, "guestSeen")
host = load_from_db(mydb, "host")
isocode = load_from_db(mydb, "isocode")
listing = load_from_db(mydb, "listing")
locale = load_from_db(mydb, "locale")
review = load_from_db(mydb, "review")
review_language = load_from_db(mydb, "review_language")
word_count = load_from_db(mydb, "word_count")
detach(package:RMySQL)
#
# join review and language
#
setkey(review, idReview)
setkey(review_language, idReview)
review = review[review_language, nomatch=0]
remove(review_language)
#
# join guest locale with isocode
#
names(locale)
names(isocode)
setnames(isocode, "Name", "nation")
isocode = rbind(isocode, data.table(nation='USA', Code2='US', Code3='USA', CodeNum=840))
isocode = rbind(isocode, data.table(nation='USVI', Code2="VI", Code3='VIR', CodeNum=850))
isocode = isocode[nation!='Taiwan']
isocode = rbind(isocode, data.table(nation='Taiwan', Code2=NA, Code3='TWN', CodeNum=NA))
length(isocode$nation)
length(unique(isocode$nation))
setkey(locale, nation)
setkey(isocode, nation)
locale_iso = locale[isocode, nomatch=0]
#
# join listing country with isocode
#
listing$nation = gsub('"', '', listing$country)
setkey(listing, nation)
setkey(isocode, nation)
listing_iso = listing[isocode, nomatch=0]
setdiff(unique(listing$nation), unique(listing_iso$nation))
#
# uniform guest - guestSeen
#
names(guest)
names(guestSeen)
setnames(guestSeen, "firstName", "first_name")
guest = guest[, names(guestSeen), with=F]
guest_all = rbind(guest, guestSeen)
remove(guest)
remove(guestSeen)
guest = guest_all
remove(guest_all)
review = review[!is.na(locale)]
review = review[locale!='']
View(review)
review$locale[99]
review = review[locale!=' ']
View(review)
review = review[locale!='  ']
cityNames = locale
remove(locale)
setnames(cityNames, "cityName", "locale")
names(review)
names(cityNames)
names(isocode)
setkey(review, locale)
View(review)
source("myFunctions.R")
#
# loading datast
#
library(RMySQL)
mydb = dbConnect(MySQL(), user='root', password='', dbname='airbnb', host='127.0.0.1')
# mydb = dbConnect(MySQL(), user='root', password='1234567890', dbname='airbnb', host='127.0.0.1')
dbListTables(mydb)
guest = load_from_db(mydb, "guest")
guestSeen = load_from_db(mydb, "guestSeen")
host = load_from_db(mydb, "host")
isocode = load_from_db(mydb, "isocode")
listing = load_from_db(mydb, "listing")
locale = load_from_db(mydb, "locale")
review = load_from_db(mydb, "review")
review_language = load_from_db(mydb, "review_language")
word_count = load_from_db(mydb, "word_count")
detach(package:RMySQL)
#
# join review and language
#
setkey(review, idReview)
setkey(review_language, idReview)
review = review[review_language, nomatch=0]
remove(review_language)
#
# join guest locale with isocode
#
names(locale)
names(isocode)
setnames(isocode, "Name", "nation")
isocode = rbind(isocode, data.table(nation='USA', Code2='US', Code3='USA', CodeNum=840))
isocode = rbind(isocode, data.table(nation='USVI', Code2="VI", Code3='VIR', CodeNum=850))
isocode = isocode[nation!='Taiwan']
isocode = rbind(isocode, data.table(nation='Taiwan', Code2=NA, Code3='TWN', CodeNum=NA))
length(isocode$nation)
length(unique(isocode$nation))
setkey(locale, nation)
setkey(isocode, nation)
locale_iso = locale[isocode, nomatch=0]
#
# join listing country with isocode
#
listing$nation = gsub('"', '', listing$country)
setkey(listing, nation)
setkey(isocode, nation)
listing_iso = listing[isocode, nomatch=0]
setdiff(unique(listing$nation), unique(listing_iso$nation))
#
# uniform guest - guestSeen
#
names(guest)
names(guestSeen)
setnames(guestSeen, "firstName", "first_name")
guest = guest[, names(guestSeen), with=F]
guest_all = rbind(guest, guestSeen)
remove(guest)
remove(guestSeen)
guest = guest_all
remove(guest_all)
review = review[!is.na(locale)]
review = review[locale!='']
review = review[locale!=' ']
review = review[locale!='  ']
names(review)
names(locale)
names(isocode)
cityNames = locale
remove(locale)
setnames(cityNames, "cityName", "locale")
names(review)
names(cityNames)
names(isocode)
View(review)
review$locale[1:100]
setkey(review, locale)
review$locale[1:100]
source("myFunctions.R")
#
# loading datast
#
library(RMySQL)
mydb = dbConnect(MySQL(), user='root', password='', dbname='airbnb', host='127.0.0.1')
# mydb = dbConnect(MySQL(), user='root', password='1234567890', dbname='airbnb', host='127.0.0.1')
dbListTables(mydb)
guest = load_from_db(mydb, "guest")
guestSeen = load_from_db(mydb, "guestSeen")
host = load_from_db(mydb, "host")
isocode = load_from_db(mydb, "isocode")
listing = load_from_db(mydb, "listing")
locale = load_from_db(mydb, "locale")
review = load_from_db(mydb, "review")
review_language = load_from_db(mydb, "review_language")
word_count = load_from_db(mydb, "word_count")
detach(package:RMySQL)
#
# join review and language
#
setkey(review, idReview)
setkey(review_language, idReview)
review = review[review_language, nomatch=0]
remove(review_language)
#
# join guest locale with isocode
#
names(locale)
names(isocode)
setnames(isocode, "Name", "nation")
isocode = rbind(isocode, data.table(nation='USA', Code2='US', Code3='USA', CodeNum=840))
isocode = rbind(isocode, data.table(nation='USVI', Code2="VI", Code3='VIR', CodeNum=850))
isocode = isocode[nation!='Taiwan']
isocode = rbind(isocode, data.table(nation='Taiwan', Code2=NA, Code3='TWN', CodeNum=NA))
length(isocode$nation)
length(unique(isocode$nation))
setkey(locale, nation)
setkey(isocode, nation)
locale_iso = locale[isocode, nomatch=0]
#
# join listing country with isocode
#
listing$nation = gsub('"', '', listing$country)
setkey(listing, nation)
setkey(isocode, nation)
listing_iso = listing[isocode, nomatch=0]
setdiff(unique(listing$nation), unique(listing_iso$nation))
#
# uniform guest - guestSeen
#
names(guest)
names(guestSeen)
setnames(guestSeen, "firstName", "first_name")
guest = guest[, names(guestSeen), with=F]
guest_all = rbind(guest, guestSeen)
remove(guest)
remove(guestSeen)
guest = guest_all
remove(guest_all)
review = review[!is.na(locale)]
review = review[locale!='']
review = review[locale!=' ']
review = review[locale!='  ']
names(review)
names(locale)
names(isocode)
cityNames = locale
remove(locale)
setnames(cityNames, "cityName", "locale")
names(review)
names(cityNames)
names(isocode)
review$locale[1:100]
sort(review$locale)[1:10]
View(review)
View(locale_iso)
gregexpr(pattern ='2', "the2quickbrownfoxeswere2tired")
gregexpr(pattern =',', " New York, New York")
gregexpr(pattern =' ', " New York, New York")
gregexpr(pattern ='  ', " New York, New York")
locale_iso$nazione = substr(locale_iso$cityName,
gregexpr(pattern =',', locale_iso$cityName)[length(gregexpr(pattern =',', locale_iso$cityName))],
nchar(locale_iso$cityName))
locale_iso$pos_comma = gregexpr(pattern =',', locale_iso$cityName)
View(listing_iso)
View(locale_iso)
locale_iso$nazione = ifelse(locale_iso$pos_comma==-1,
locale_iso$cityName,
substring(locale_iso$cityName, locale_iso$pos_comma, length(locale_iso$cityName)))
locale_iso$pos_comma = as.numeric( gregexpr(pattern =',', locale_iso$cityName) )
locale_iso$pos_comma = as.array( gregexpr(pattern =',', locale_iso$cityName) )
locale_iso$pos_comma[1]
gregexpr(pattern =' ', " New York, New York")
gregexpr(pattern =' ', " New York, New York")[[1]]
gregexpr(pattern =' ', " New York, New York")[1]
as.numeric( gregexpr(pattern =' ', " New York, New York") )
as.array( gregexpr(pattern =' ', " New York, New York") )
as.array( gregexpr(pattern =' ', " New York, New York") )[1]
as.array( gregexpr(pattern =' ', " New York, New York") )[[1]
locale_iso$pos_comma = as.array( gregexpr(pattern =',', locale_iso$cityName) )
locale_iso$pos_comma[1]
locale_iso$nazione = ifelse(locale_iso$pos_comma==(-1),
locale_iso$cityName,
substring(locale_iso$cityName, locale_iso$pos_comma, length(locale_iso$cityName)))
as.array( gregexpr(pattern =' ', " New York, New York") )[[1]]
unlist( gregexpr(pattern =' ', " New York, New York") )
unlist( gregexpr(pattern =' ', "New York, New York") )
locale_iso$pos_comma = unlist( gregexpr(pattern =',', locale_iso$cityName) )
source("myFunctions.R")
#
# loading datast
#
library(RMySQL)
mydb = dbConnect(MySQL(), user='root', password='', dbname='airbnb', host='127.0.0.1')
# mydb = dbConnect(MySQL(), user='root', password='1234567890', dbname='airbnb', host='127.0.0.1')
dbListTables(mydb)
guest = load_from_db(mydb, "guest")
guestSeen = load_from_db(mydb, "guestSeen")
host = load_from_db(mydb, "host")
isocode = load_from_db(mydb, "isocode")
listing = load_from_db(mydb, "listing")
locale = load_from_db(mydb, "locale")
review = load_from_db(mydb, "review")
review_language = load_from_db(mydb, "review_language")
word_count = load_from_db(mydb, "word_count")
detach(package:RMySQL)
#
# join review and language
#
setkey(review, idReview)
setkey(review_language, idReview)
review = review[review_language, nomatch=0]
remove(review_language)
#
# join guest locale with isocode
#
names(locale)
names(isocode)
setnames(isocode, "Name", "nation")
isocode = rbind(isocode, data.table(nation='USA', Code2='US', Code3='USA', CodeNum=840))
isocode = rbind(isocode, data.table(nation='USVI', Code2="VI", Code3='VIR', CodeNum=850))
isocode = isocode[nation!='Taiwan']
isocode = rbind(isocode, data.table(nation='Taiwan', Code2=NA, Code3='TWN', CodeNum=NA))
length(isocode$nation)
length(unique(isocode$nation))
setkey(locale, nation)
setkey(isocode, nation)
locale_iso = locale[isocode, nomatch=0]
#
# join listing country with isocode
#
listing$nation = gsub('"', '', listing$country)
setkey(listing, nation)
setkey(isocode, nation)
listing_iso = listing[isocode, nomatch=0]
setdiff(unique(listing$nation), unique(listing_iso$nation))
#
# uniform guest - guestSeen
#
names(guest)
names(guestSeen)
setnames(guestSeen, "firstName", "first_name")
guest = guest[, names(guestSeen), with=F]
guest_all = rbind(guest, guestSeen)
remove(guest)
remove(guestSeen)
guest = guest_all
remove(guest_all)
review = review[!is.na(locale)]
review = review[locale!='']
review = review[locale!=' ']
review = review[locale!='  ']
names(review)
names(locale)
names(isocode)
cityNames = locale
remove(locale)
setnames(cityNames, "cityName", "locale")
names(review)
names(cityNames)
names(isocode)
names(review)
names(cityNames)
names(isocode)
review_iso = as.data.table(
sqldf("select t1.*, t3.Code3
from review t1
join cityNames t2 on t1.locale=t2.locale
join isocode t3 on t2.nation=t3.nation")
)
library(sqldf)
review_iso = as.data.table(
sqldf("select t1.*, t3.Code3
from review t1
join cityNames t2 on t1.locale=t2.locale
join isocode t3 on t2.nation=t3.nation")
)
review_iso = as.data.table(
sqldf("select *
from review t1
join cityNames t2 on t1.locale=t2.locale")
)
review$locale[1:20]
cityNames$locale[1:20]
review$locale = substr(review$locale, 2, nchar(review$locale))
review$locale = gsub(' ', '', review$locale)
cityNames$locale = gsub(' ', '', cityNames$locale)
library(sqldf)
review_iso = as.data.table(
sqldf("select *
from review t1
join cityNames t2 on t1.locale=t2.locale")
)
review_iso = as.data.table(
sqldf("select t1.*, t3.Code3
from review t1
join cityNames t2 on t1.locale=t2.locale
join isocode t3 on t2.nation=t3.nation")
)
View(review_iso)
View(listing_iso)
View(review)
View(review_iso)
names(review_iso)
View(review_iso)
review_iso$isEnglish = ifelse(review_iso$inferredLanguage=='english', 1, 0)
View(review_iso)
review_iso_g = review_iso[, .(n=length(id), english_ratio=mean(isEnglish)), by=Code3]
View(review_iso_g)
View(review_iso)
summary(review_iso$isEnglish)
review_iso = review_iso[!is.na(isEnglish)]
summary(review_iso$isEnglish)
review_iso_g = review_iso[, .(n=length(id), english_ratio=mean(isEnglish)), by=Code3]
View(review_iso_g)
byLanguage = review_iso[, .(n=length(id)), by=list(Code3,inferredLanguage)]
View(byLanguage)
View(review_iso_g)
View(review_iso_g)
review_iso_g = review_iso_g[n>100 & english_ratio>0.75]
View(review_iso_g)
View(word_count)
View(isocode)
library(RMySQL)
mydb = dbConnect(MySQL(), user='root', password='', dbname='airbnb', host='127.0.0.1')
dbListTables(mydb)
world_cultural_factors = load_from_db(mydb, "world_cultural_factors")
detach(package:RMySQL)
View(review_iso_g)
byLanguage = review_iso[, .(n=length(id)), by=list(Code3,inferredLanguage)]
review_iso_g = review_iso[, .(n=length(id), english_ratio=mean(isEnglish)), by=Code3]
View(review_iso_g)
View(byLanguage)
View(review_iso)
View(listing)
by_iso_guest_host = as.data.table(
sqldf("select t1.Code3 guest_iso, t2.Code3 host_iso
review_iso t1
listing_iso t2 on t1.listing_id=t2.id")
)
by_iso_guest_host = as.data.table(
sqldf("select t1.Code3 guest_iso, t2.Code3 host_iso
from review_iso t1
listing_iso t2 on t1.listing_id=t2.id")
)
by_iso_guest_host = as.data.table(
sqldf("select t1.Code3 guest_iso, t2.Code3 host_iso
from review_iso t1
join listing_iso t2 on t1.listing_id=t2.id")
)
View(by_iso_guest_host)
by_iso_guest_host_g = by_iso_guest_host[, .(n=length(guest_iso)), by=list(guest_iso,host_iso)]
View(by_iso_guest_host_g)
View(by_iso_guest_host)
review_iso_g$cnt = 1
by_iso_guest_host_g = by_iso_guest_host[, .(n=sum(cnt)), by=list(guest_iso,host_iso)]
by_iso_guest_host_g = by_iso_guest_host[, .(n=length(cnt)), by=list(guest_iso,host_iso)]
by_iso_guest_host$cnt = 1
by_iso_guest_host_g = by_iso_guest_host[, .(n=length(cnt)), by=list(guest_iso,host_iso)]
View(by_iso_guest_host_g)
View(by_iso_guest_host_g)
View(by_iso_guest_host_g)
names(by_iso_guest_host_g)
by_guest = by_iso_guest_host_g[, .(cnt_g=sum(n)), by=guest_iso]
by_host = by_iso_guest_host_g[, .(cnt_h=sum(n)), by=host_iso]
setkey(by_iso_guest_host_g, guest_iso)
setkey(by_guest, guest_iso)
by_iso_guest_host_g = by_iso_guest_host_g[by_guest, nomatch=0]
by_iso_guest_host_g = by_iso_guest_host_g[host_iso, nomatch=0]
setkey(by_iso_guest_host_g, host_iso)
setkey(by_host, host_iso)
by_iso_guest_host_g = by_iso_guest_host_g[host_iso, nomatch=0]
setkey(by_iso_guest_host_g, host_iso)
setkey(by_host, host_iso)
by_iso_guest_host_g = by_iso_guest_host_g[by_host, nomatch=0]
View(by_iso_guest_host_g)
by_iso_guest_host_g$rg = by_iso_guest_host_g$n / by_iso_guest_host_g$cnt_g
by_iso_guest_host_g$rh = by_iso_guest_host_g$n / by_iso_guest_host_g$cnt_h
View(by_iso_guest_host_g)
by_iso_guest_host_g = [n>100]
by_iso_guest_host_g = by_iso_guest_host_g[n>100]
View(by_iso_guest_host_g)
names(by_iso_guest_host_g)
by_iso_guest_host_g = by_iso_guest_host_g[guest_iso != host_iso]
View(by_iso_guest_host_g)
names(world_cultural_factors)
names(review_iso)
View(by_iso_guest_host_g)
View(byLanguage)
View(by_iso_guest_host_g)
review_iso$isEnglish = ifelse(review_iso$inferredLanguage=='english', 1, 0)
summary(review_iso$isEnglish)
review_iso = review_iso[!is.na(isEnglish)]
byLanguage = review_iso[, .(n=length(id)), by=list(Code3,inferredLanguage)]
review_iso_g = review_iso[, .(n=length(id), english_ratio=mean(isEnglish)), by=Code3]
review_iso_g = review_iso_g[n>100 & english_ratio>0.75]
review_iso_g = review_iso[, .(n=length(id), english_ratio=mean(isEnglish)), by=Code3]
review_iso_g = review_iso_g[n>100]
View(review_iso_g)
setkey(review_iso_g, Code3)
setkey(world_cultural_factors, Code3)
review_iso_g = review_iso_g[world_cultural_factors, nomatch=0]
View(review_iso_g)
library(ggplot2)
names(review_iso_g)
ggplot(review_iso_g, aes(x=english_ratio, y=individualism)) + geom_point()
ggplot(review_iso_g, aes(x=english_ratio, y=individualism)) + geom_point() +geom_label(aes(Code3))
ggplot(review_iso_g, aes(x=english_ratio, y=individualism, label=Code3)) + geom_point() + geom_label()
ggplot(review_iso_g, aes(x=english_ratio, y=individualism, label=Code3)) + geom_label()
ggplot(review_iso_g, aes(x=english_ratio, y=power_distance, label=Code3)) + geom_label()
ggplot(review_iso_g, aes(x=english_ratio, y=GDP_per_capita_in_dollars, label=Code3)) + geom_label()
names(review_iso_g)
review_iso_g = review_iso_g[english_ratio>0.6]
ggplot(review_iso_g, aes(x=english_ratio, y=GDP_per_capita_in_dollars, label=Code3)) + geom_label()
countries = unique(review_iso_g$country)
countries
countries = unique(review_iso_g$Code3)
countries
review_iso_english = review_iso[Code3 %in% countries]
library(quanteda)
mfdict <- dictionary(file = "LIWC2007_English080730.dic", format = "LIWC")
doc_term_matrix <- dfm(review_iso_english$comments, stem = FALSE, dictionary = mfdict)
doc_term = data.table( data.frame(doc_term_matrix) )
detach(package:quanteda)
View(doc_term)
